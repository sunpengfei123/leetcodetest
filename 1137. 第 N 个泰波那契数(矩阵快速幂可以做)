class Solution {
    int N = 3;
    public int tribonacci(int n) {
        if (n == 0) return 0;
        if (n == 1 || n == 2) return 1;
        int[][] ans = new int[N][N];
        for(int i = 0; i<N; i++){
            ans[i][i] = 1;
        }
        int[][] m = new int[][]{{1,1,1},{1,0,0},{0,1,0}};
        int k = n-2;
        while(k>0){
            if((k&1) != 0)ans = mul(ans,m);
            m = mul(m,m);
            k=k>>1;
        }
        return ans[0][0] + ans[0][1];
    }

    public int[][] mul(int[][] a, int[][] b){
        int[][] c = new int[N][N];
        for(int i = 0; i<N; i++){
            for(int j = 0; j<N; j++){
                c[i][j] = a[i][0]*b[0][j] + a[i][1]*b[1][j] +a[i][2]*b[2][j];
            }
        }
        return c;
    }
}
