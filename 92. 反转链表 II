/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseBetween(ListNode head, int left, int right) {
        if(left == right){
            return head;
        }
        int[] cun = new int[right-left+1];
        int i = 1;
        ListNode c = head;
        while(i <= right){
            if(i >= left){
                cun[i-left] = c.val;
            }
            c = c.next;
            i++;
        }

        i = 1;
        c = head;
        while(i <= right){
            if(i >= left){
                c.val = cun[right-i];
            }
            i++;
            c = c.next;
        }

        return head;
    }
}
