class Solution {
    public boolean exist(char[][] board, String word) {
        int[][] repe = new int[board.length][board[0].length];
        boolean re = false;
        for(int i = 0 ; i<board.length; i++){
            for(int j = 0; j<board[0].length; j++){
                if(board[i][j] == word.charAt(0)){
                    repe[i][j] = 1;
                    re = ff(board,word,1,i,j,repe);
                    if(re){
                        return true;
                    }else{
                        repe = new int[board.length][board[0].length];
                        continue;
                    }
                }else{
                    continue;
                }
            }
        }
        
        return re;

    }

    public boolean ff(char[][] board, String word, int index, int i, int j,int[][] repe){

        boolean re = false;

        if(index >= word.length() )return true;

        if(index == word.length() -1){
            if(i-1 >= 0 && repe[i-1][j] == 0){
                if(board[i-1][j] == word.charAt(index)){
                    return true;
                }
                
            }
            if(i+1 < board.length && repe[i+1][j] == 0){
                if(board[i+1][j] == word.charAt(index)){
                    return true;
                }
            }

            if(j-1 >= 0 && repe[i][j-1] == 0){
                if(board[i][j-1] == word.charAt(index)){
                    return true;
                }
            }

            if(j+1 < board[0].length && repe[i][j+1] == 0){
                if(board[i][j+1] == word.charAt(index)){
                    return true;
                }

            }

            return false;

        }else{
            if(i-1 >= 0 && repe[i-1][j] == 0){
                if(board[i-1][j] == word.charAt(index)){
                    repe[i-1][j] = 1;
                    re = ff(board,word,index+1,i-1,j,repe);
                    if(re) return true;
                    repe[i-1][j] = 0;
                }
            }
            if(i+1 < board.length && repe[i+1][j] == 0){
                if(board[i+1][j] == word.charAt(index)){
                    repe[i+1][j] = 1;
                    re = ff(board,word,index+1,i+1,j,repe);
                    if(re) return true;
                     repe[i+1][j] = 0;
                }
            }

            if(j-1 >= 0 && repe[i][j-1] == 0){
                if(board[i][j-1] == word.charAt(index)){
                    repe[i][j-1] = 1;
                    re = ff(board,word,index+1,i,j-1,repe);
                    if(re) return true;
                    repe[i][j-1] = 0;
                }
            }

            if(j+1 < board[0].length && repe[i][j+1] == 0){
                if(board[i][j+1] == word.charAt(index)){
                    repe[i][j+1] = 1;
                    re = ff(board,word,index+1,i,j+1,repe);
                    if(re) return true;
                    repe[i][j+1] = 0;
                }
            }

            return false;
        }
    }
}
