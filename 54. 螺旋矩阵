class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        int t = 0;
        int num = 0;
        List<Integer> re = new ArrayList<Integer>();
        while(num<matrix.length*matrix[0].length){

            for(int i = t; i<matrix[0].length-t; i++){
                num++;
                re.add(matrix[t][i]);
            }
            if(num>=matrix.length*matrix[0].length){
                break;
            }
            for(int i = t+1; i<matrix.length-t; i++){
                num++;
                re.add(matrix[i][matrix[0].length-t-1]);
            }
            if(num>=matrix.length*matrix[0].length){
                break;
            }
            for(int i = matrix[0].length-t-1-1; i>=t; i--){
                num++;
                re.add(matrix[matrix.length-1-t][i]);
            }
            if(num>=matrix.length*matrix[0].length){
                break;
            }
            for(int i = matrix.length-1-t-1; i>=t+1; i--){
                num++;
                re.add(matrix[i][t]);
            }
            if(num>=matrix.length*matrix[0].length){
                break;
            }
            t++;
        }
        return re;
    }
}
