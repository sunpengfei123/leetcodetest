/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public int xx;
    public int yy;
    public int t = -1;
    public TreeNode tt = null;
    public boolean re = false;

    public boolean isCousins(TreeNode root, int x, int y) {
        xx = x;
        yy = y;
        if(x == root.val ||  y == root.val) return false;
        ff(root, 0);
        return re;
    }

    public void ff(TreeNode root, int i){
        if(root == null) return;
        if(root.left != null){
            if(root.left.val == xx || root.left.val == yy){
                if(t == -1){
                    t = i;
                    tt = root;
                }else{
                    if(t == i && root != tt){
                        re = true;
                    } 
                    return ;
                }
            }
            ff(root.left, i+1);
        }
        if(root.right != null){
            if(root.right.val == xx || root.right.val == yy){
                if(t == -1){
                    t = i;
                    tt = root;
                }else{
                    if(t == i && root != tt){
                        re = true;
                    } 
                    return ;
                }
            }
            ff(root.right, i+1);
        }
    }
}
