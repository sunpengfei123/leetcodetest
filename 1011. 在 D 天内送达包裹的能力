class Solution {
    public int shipWithinDays(int[] weights, int D) {
        int fen = (weights.length + D -1 )/D;
        int low = 0;
        int up = 0;
        int t = 0;
        for(int i = 0; i<weights.length; i++){
            low = Math.max(low, weights[i]);
            t += weights[i];
            up = Math.max(up, t);
            if(i%fen == fen-1){
                t = 0;
            }
        }
        int re = up;
        while(up >= low){
            int mid = (up + low)/2;
            int d = days(weights, mid);
            if(d<=D){
                re = mid;
                up = mid-1;
            }else{
                low = mid+1;
            }
        }

        return re;

    }

    public int days(int[] weights, int carry){
        int re = 0;
        int t = 0;
        for(int i:weights){
            if(t + i > carry){
                re++;
                t = i;
            }else{
                t+=i;
            }
        }

        if(t > 0) re++;
        return re;
    }
}
