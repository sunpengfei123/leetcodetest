class Solution {
    int re = 0;
    public int fourSumCount(int[] A, int[] B, int[] C, int[] D) {
        int n = A.length;

        HashMap<Integer,Integer> hm = new HashMap<Integer,Integer>();
        HashMap<Integer,Integer> hm2 = new HashMap<Integer,Integer>();

        for(int i = 0; i<n; i++){
            for(int j = 0; j<n; j++){
                if(hm.containsKey(A[i]+B[j])){
                    hm.put(A[i]+B[j],hm.get(A[i]+B[j])+1);
                }else{
                    hm.put(A[i]+B[j],1);
                }
            }
            
        }

        // for(int i = 0; i<n; i++){
        //     for(int j = 0; j<n; j++){
        //         if(hm2.containsKey(C[i]+D[j])){
        //             hm2.put(C[i]+D[j],hm.get(C[i]+D[j])+1);
        //         }else{
        //             hm2.put(C[i]+D[j],1);
        //         }
        //     }
        // }

        // for(int i: hm.keySet()){
        //     if(hm2.containsKey(0-i)){
        //         re+=hm2.get(0-i)*hm.get(i);
        //     }
        // }

        for(int i = 0; i<n; i++){
            for(int j = 0; j<n; j++){
                if(hm.containsKey(-C[i]-D[j])){
                    re+=hm.get(-C[i]-D[j]);
                }
            }
            
        }

        return re;

    }

   
}
