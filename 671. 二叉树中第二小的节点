/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int findSecondMinimumValue(TreeNode root) {
        if(root.left == null){
            return -1;
        }
        if(root.left.val != root.right.val){
            if(root.left.val == root.val){
                int l = findSecondMinimumValue(root.left);
                if(l==-1)return root.right.val;
                return Math.min(l,root.right.val);
            }else{
                int r = findSecondMinimumValue(root.right);
                if(r==-1)return root.left.val;
                return Math.min(r,root.left.val);
            }
        }

        int l = findSecondMinimumValue(root.left);
        int r = findSecondMinimumValue(root.right);

        if(l == -1){
            return r;
        }else{
            if(r == -1)return l;
            return Math.min(r,l);
        }

    }
}
