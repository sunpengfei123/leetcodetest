/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public TreeNode buildTree(int[] preorder, int[] inorder) {
        if(preorder == null || preorder.length == 0){
            return null;
        }
        int jiao = -1;
        for(int i = 0; i < preorder.length; i++){
            if(preorder[0] == inorder[i]){
                jiao = i;
                break;
            }
        }
        int[] lp = new int[jiao-0];
        int[] rp = new int[inorder.length -jiao-1];
        int[] li = new int[jiao-0];
        int[] ri = new int[inorder.length -jiao-1];
        for(int i = 0; i<jiao; i++){
            lp[i] = preorder[i+1];
            li[i] = inorder[i];
        }
        for(int i = jiao+1; i<inorder.length; i++){
            rp[i-jiao-1] = preorder[i];
            ri[i-jiao-1] = inorder[i];
        }


        TreeNode gen = new TreeNode(preorder[0]);

        gen.left = buildTree(lp,li);
        gen.right = buildTree(rp,ri);

        return gen;

    }
}
