class Solution {
    public int findMaxForm(String[] strs, int m, int n) {
        int re = 0;
        List<int[]> cun = new ArrayList<int[]>();
        for(int i = 0; i<strs.length; i++){
            int y = 0;
            int l = 0;
            for(char c:strs[i].toCharArray()){
                if(c == '0'){
                    l++;
                }else{
                    y++;
                }
                if(l > m || y > n){
                    break;
                }
            }
            if( l <= m && y <= n){
                cun.add(new int[]{l,y});
            }
        }

        int[][] dp = new int[m+1][n+1];
        // dp[0][0] = 1;
        for(int i = 0; i<cun.size(); i++){
            int[][] t = new int[m+1][n+1];
            for(int j = 0; j<=m; j++){
                for(int k = 0; k<=n; k++){
                    t[j][k] = dp[j][k];
                    if(j - cun.get(i)[0] >= 0 && k - cun.get(i)[1] >= 0){
                        t[j][k] = Math.max(t[j][k], 1 + dp[j - cun.get(i)[0]][k - cun.get(i)[1]]);
                    }
                }
            }

            dp = t;
        }

        return dp[m][n];
    }
}
