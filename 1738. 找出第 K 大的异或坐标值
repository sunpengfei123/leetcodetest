class Solution {
    public int kthLargestValue(int[][] matrix, int k) {
        PriorityQueue<Integer>  pq = new PriorityQueue<Integer>(new Comparator<Integer>(){
            public int compare(Integer o1, Integer o2){
                return o2-o1;
            }
        });
        int[][] cun = new int[matrix.length+1][matrix[0].length+1];
        for(int i = 1; i<cun.length; i++){
            for(int j = 1; j<cun[0].length; j++){
                cun[i][j] = cun[i][j-1] ^ matrix[i-1][j-1] ^ cun[i-1][j] ^ cun[i-1][j-1];
                pq.add(cun[i][j]);
            }
        }
        int re = 0;
        for(int i = 0; i<k; i++){
            int t = pq.poll();
            if(i == k-1){
                re = t;
            }
        }

        return re;
    }
}
